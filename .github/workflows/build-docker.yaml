# SPDX-License-Identifier: Apache-2.0
# # Copyright Contributors to the ODPi Egeria project.
#
name: Egeria test repo docker build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Run client/server in parallel. 
# Code checkout is small so low overhead, 
# npm build is slow, so benefits from parallelism
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        if: ${{ github.event_name == 'push' && github.repository == 'planetf1/actiontest' }}
      # For releases (ie not main)
      - name: Build and push (not main merge)
        if: github.ref != 'refs/heads/main'
        id: docker_build_release
        uses: docker/build-push-action@v2 
        with:
          push:  ${{ github.event_name == 'push' && github.repository == 'planetf1/actiontest' }} 
          tags: planetf1/actiontest:0.01
          context: .
          file: ./Dockerfile
      # For main code stream
      - name: Build and push (main merge)
        if: github.ref == 'refs/heads/main'
        id: docker_build_main
        uses: docker/build-push-action@v2
        with:
          push:  ${{ github.event_name == 'push' && github.repository == 'planetf1/actiontest' }} 
          tags: planetf1/actiontest:0.01, planetf1/actiontest:latest
          context: .
          file: ./Dockerfile
      - name: Image digest (release)
        if: github.ref != 'refs/heads/main'
        run: echo ${{ steps.docker_build_release.outputs.digest }}
      - name: Image digest (main)
        if: github.ref == 'refs/heads/main'
        run: echo ${{ steps.docker_build_main.outputs.digest }}
      - name: Create Archive
        run: tar -zcf /tmp/actiontest-dockerbuild.tar.gz .
      - name: Upload 
        uses: actions/upload-artifact@v2
        with:
          name: Egeria test
          path: /tmp/actiontest-dockerbuild.tar.gz
